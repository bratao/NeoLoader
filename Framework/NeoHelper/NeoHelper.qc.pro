# ----------------------------------------------------
# This file is generated by the Qt Visual Studio Add-in.
# ------------------------------------------------------

TEMPLATE = lib
TARGET = NeoHelper
QT += core network
DEFINES += QT_LARGEFILE_SUPPORT QT_NETWORK_LIB NEOHELPER_LIB USING_QT
mac:DEFINES += CRYPTOPP_DISABLE_ASM
!mac:!win32:QMAKE_CXXFLAGS += -std=c++0x
!win32:QMAKE_CXXFLAGS += -w
!mac:unix:QMAKE_LFLAGS += -Wl,-rpath,'\$\$ORIGIN'
mac:QMAKE_CXXFLAGS += -std=c++11

!win32:QMAKE_LFLAGS +=-rdynamic

CONFIG(release, debug|release):{
QMAKE_CXXFLAGS_RELEASE = $$QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO
QMAKE_LFLAGS_RELEASE = $$QMAKE_LFLAGS_RELEASE_WITH_DEBUGINFO
}
CONFIG(debug, debug|release):DESTDIR = ../../Debug
CONFIG(release, debug|release):DESTDIR = ../../Release
INCLUDEPATH += .
DEPENDPATH += .
#MOC_DIR += ./GeneratedFiles
#OBJECTS_DIR += ./ObjectFiles
#UI_DIR += ./GeneratedFiles
#RCC_DIR += ./GeneratedFiles

win32:{
CONFIG(debug, debug|release):LIBS += -L../../Debug/
CONFIG(release, debug|release):LIBS += -L../../Release/
CONFIG(debug, debug|release):contains(QMAKE_HOST.arch, x86_64):LIBS += \
    -L../../../NeoLoader/crypto++/x64/DLL_Output/Debug/ \
    -L../../../NeoLoader/zlib/x64/Debug/
CONFIG(debug, debug|release):!contains(QMAKE_HOST.arch, x86_64):LIBS += \
    -L../../../NeoLoader/crypto++/Win32/DLL_Output/Debug/ \
    -L../../../NeoLoader/zlib/win32/Debug/
CONFIG(release, debug|release):contains(QMAKE_HOST.arch, x86_64):LIBS += \
    -L../../../NeoLoader/crypto++/x64/DLL_Output/Release/ \
    -L../../../NeoLoader/zlib/x64/Release/
CONFIG(release, debug|release):!contains(QMAKE_HOST.arch, x86_64):LIBS += \
    -L../../../NeoLoader/crypto++/Win32/DLL_Output/Release/ \
    -L../../../NeoLoader/zlib/win32/Release/
LIBS += -lqjson -lqbencode -lcryptopp -lzlib
}

!win32:{
CONFIG(debug, debug|release):LIBS += -L$$OUT_PWD/../../Debug/
CONFIG(release, debug|release):LIBS += -L$$OUT_PWD/../../Release/
LIBS += -L$$OUT_PWD/../../../NeoLoader/crypto++/
LIBS += -lqjson -lqbencode -lcryptopp -lz
}

CONFIG += precompile_header
PRECOMPILED_HEADER = GlobalHeader.h

include(NeoHelper.pri)
